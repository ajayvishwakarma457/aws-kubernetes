Prerequisites

    An EC2 instance running Ubuntu
    Access to the instance with proper permissions
    The GitHub repository: https://github.com/ajayvishwakarma457/aws-kubernetes.git

Step-by-Step Implementation
1. Set up your EC2 instance with Ubuntu
First, make sure you have an EC2 instance with Ubuntu running and that you can SSH into it.

2. Install Docker

    # Update package lists
    sudo apt update

    # Install prerequisites
    sudo apt install -y apt-transport-https ca-certificates curl software-properties-common

    # Add Docker's official GPG key
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -

    # Add Docker repository
    sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

    # Update package database with Docker packages
    sudo apt update

    # Install Docker
    sudo apt install -y docker-ce

    # Start and enable Docker
    sudo systemctl start docker
    sudo systemctl enable docker

    # Add your user to the docker group to run Docker without sudo
    sudo usermod -aG docker ${USER}

    After running these commands, you'll need to log out and log back in for the group changes to take effect.



3. Install kubectl (Kubernetes command-line tool)

    # Download kubectl
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

    # Make kubectl executable
    chmod +x kubectl

    # Move kubectl to your PATH
    sudo mv kubectl /usr/local/bin/

4. Install Minikube (local Kubernetes)

    # Download Minikube
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64

    # Make it executable
    chmod +x minikube-linux-amd64

    # Move it to your PATH
    sudo mv minikube-linux-amd64 /usr/local/bin/minikube


5. Clone the GitHub repository
    # Clone the repository
    git clone https://github.com/ajayvishwakarma457/aws-kubernetes.git

    # Navigate to the project directory
    cd aws-kubernetes


6. Start Minikube
    # Start Minikube with Docker driver
    minikube start --driver=docker

7. Build and deploy the application
    After examining the repository structure, create a Dockerfile if one doesn't exist:

    # Create a Dockerfile in the project root
    cat > Dockerfile << 'EOF'
    FROM node:14

    WORKDIR /app

    COPY package*.json ./

    RUN npm install

    COPY . .

    EXPOSE 3000

    CMD ["node", "server.js"]
    EOF


8. Create Kubernetes manifests
    Create a deployment file:

        cat > kubernetes/deployment.yaml << 'EOF'
        apiVersion: apps/v1
        kind: Deployment
        metadata:
        name: nodejs-app
        spec:
        replicas: 2
        selector:
            matchLabels:
            app: nodejs-app
        template:
            metadata:
            labels:
                app: nodejs-app
            spec:
            containers:
            - name: nodejs-app
                image: nodejs-app:latest
                imagePullPolicy: Never
                ports:
                - containerPort: 3000
        EOF


    Create a service file:
        cat > kubernetes/service.yaml << 'EOF'

        apiVersion: v1
        kind: Service
        metadata:
        name: nodejs-app-service
        spec:
        type: NodePort
        selector:
            app: nodejs-app
        ports:
        - port: 3000
            targetPort: 3000
            nodePort: 30000
        EOF


9. Build the Docker image and deploy to Kubernetes

    # Build Docker image
    docker build -t nodejs-app .

    # Load the image into Minikube
    minikube image load nodejs-app:latest

    # Apply Kubernetes configurations
    kubectl apply -f kubernetes/deployment.yaml
    kubectl apply -f kubernetes/service.yaml

    # Check if deployment was successful
    kubectl get deployments
    kubectl get pods
    kubectl get services


10. Access the application
    # Get the URL to access your application
    minikube service nodejs-app-service --url